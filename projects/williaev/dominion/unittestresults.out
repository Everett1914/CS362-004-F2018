Result for running dominion tests:
unittest1.c:

unittest1
Testing drawCard Function:
-------------------------------
____________________________________________________________________________________________________________________
Test to see if the function correctly adds cards to the players hand if the deck is not empty and discard is empty.
Expect this test to pass.
drawCard():  Pass-Initial # of hand cards 5.  After 4 cards drawn hand contains 9 cards.
drawCard():  Pass-Initial # of deck cards 5.  After 4 cards drawn deck contains 1 cards.
___________________________________________________________________________________________________________________
Test to see if the function correctly adds cards to the players hand if the deck is not empty and discard is empty.
Since discard is empty and we are attempting to draw more than is in the deck expect this test to fail.
drawCard():  Fail-Initial # of hand cards 5.  After 7 cards drawn hand contains 10 cards.
drawCard():  Fail-Initial # of deck cards 5.  After 7 cards drawn deck contains 0 cards.
___________________________________________________________________________________________________________
Test to see if the function correctly adds cards to the players hand if the deck and discard are not empty.
This test draws more than is in the deck forcing us to use the discard pile.  Expect this test to pass.
drawCard():  Pass-Initial # of hand cards 5.  After 8 cards drawn hand contains 13 cards.
drawCard():  Pass-Initial # of deck cards 15.  After 8 cards drawn deck contains 7 cards.
File 'dominion.c'
Lines executed:17.05% of 610
Branches executed:16.79% of 417
Taken at least once:14.15% of 417
Calls executed:8.51% of 94
Creating 'dominion.c.gcov'


unittest2
Testing fullDeckCount Function:
-------------------------------
_____________________________
Test for Correct Card Number.
FullDeckCount(): Pass-target count(3) for specific card matches actual number of a specific card in Hand, Deck and Discard (3).
FullDeckCount(): Fail-target count (12) for specific card doesn't match actual number of a specific card Hand, Deck and Discard (3).
_________________________________________________________
Test for when card is not in deck, hand or discard piles.
FullDeckCount(): Pass-target count(0) for specific card matches actual number of a specific card in Hand, Deck and Discard (0).
FullDeckCount(): Fail-target count (10) for specific card doesn't match actual number of a specific card Hand, Deck and Discard (0).
___________________________________________________________
Test for when either deck, hand or discard piles are empty.
FullDeckCount(): Pass-target count(2) for specific card matches actual number of a specific card in Hand, Deck and Discard (2).
FullDeckCount(): Fail-target count (12) for specific card doesn't match actual number of a specific card Hand, Deck and Discard (2).
File 'dominion.c'
Lines executed:18.52% of 610
Branches executed:19.66% of 417
Taken at least once:17.03% of 417
Calls executed:8.51% of 94
Creating 'dominion.c.gcov'


unittest3
Testing shuffle Function:
-------------------------------
________________________________________________________
Test to see if the function correctly shuffles the deck.
If shuffle is working expect this result to pass.
Original: 1
Shuffled: 1
Original: 4
Shuffled: 4
Original: 1
Shuffled: 1
Original: 4
Shuffled: 4
Original: 4
Shuffled: 4
shuffle():  Fail-Deck was not shuffled
___________________________________________________________________________
Since shuffle is not working this is a test to verify the test coding.
Arrays are the same, but arranged differently.  Expect this result to pass.
Original: 0
Shuffled: 1
Original: 1
Shuffled: 0
Original: 3
Shuffled: 4
Original: 4
Shuffled: 3
Original: 8
Shuffled: 8
shuffle():  Pass-deck was shuffled
_________________________________________________________________________________
Since shuffle is not working this is a test to verify the test coding.
In this test arrays are the same size but different.  Expect this result to fail.
Original: 7
Shuffled: 6
Original: 0
Shuffled: 0
Original: 5
Shuffled: 5
Original: 3
Shuffled: 3
Original: 8
Shuffled: 8
shuffle():  Fail-decks contain different elements
File 'dominion.c'
Lines executed:18.69% of 610
Branches executed:19.66% of 417
Taken at least once:17.27% of 417
Calls executed:8.51% of 94
Creating 'dominion.c.gcov'


unittest4
Testing numHandCards Function:
-------------------------------
__________________________________________________________________________________________________________
Test to see if the function gets correct # of handcards before and after a card is drawn the deck.
numHandCards():  Pass-Function gets correct number of cards
____________________________________________________________________________________________________________________________
Test to see if the function gets correct # of handcards before and after a card is drawn when the player is changed.
numHandCards():  Pass-Function gets correct number of cards
File 'dominion.c'
Lines executed:19.34% of 610
Branches executed:19.66% of 417
Taken at least once:17.27% of 417
Calls executed:9.57% of 94
Creating 'dominion.c.gcov'


cardtest1
Testing smithy card:
-------------------------------
______________________________________________________________
Test to see if hand is adjusted properly after playing smithy.
smithy test:  Fail-Expected value 8:  Result 7
______________________________________________________________
Test to see if deck is adjusted properly after playing smithy.
smithy test:  Fail-Expected value 2:  Result 3
________________________________________________________________________
Test to ensure opponents hand is not changed after playing smithy.
smithy test:  Pass-Expected value 0:  Result 0
______________________________________________________________
Test to ensure opponents deck is not changed after playing smithy.
smithy test:  Pass-Expected value 10:  Result 10
__________________________________________________________________________
Test to check if victory card states haven't changed after playing smithy.
smithy test:  Pass-Expected value estate 8:  Result 8
smithy test:  Pass-Expected value duchy 8:  Result 8
smithy test:  Pass-Expected value province 8:  Result 8
__________________________________________________________________________
Test to check if kingdom card states haven't changed after playing smithy.
smithy test:  Pass-No change to the state of the kingdom cards
File 'dominion.c'
Lines executed:21.80% of 610
Branches executed:25.66% of 417
Taken at least once:18.23% of 417
Calls executed:12.77% of 94
Creating 'dominion.c.gcov'


cardtest2
Testing adventurer card:
-------------------------------
______________________________________________________________________________________
Test to see if hand, deck and discard are properly updated after adventurer is played.
adventurer test:  Pile values before playing adventurer
adventurer test:  discard: 0  deck: 5  hand: 5
adventurer test:  Fail-Hand increased by more than 2 cards
adventurer test:  discard: 2  deck: 0  hand: 8
File 'dominion.c'
Lines executed:24.75% of 610
Branches executed:28.54% of 417
Taken at least once:20.86% of 417
Calls executed:15.96% of 94
Creating 'dominion.c.gcov'


cardtest3
Testing remodel card:
-------------------------------
______________________________________________________________________
Test to see if hand count is properly updated after remodel is played.
remodel test:  Fail-Expected Value for hand count 5:  Result 3
______________________________________________________________________________
Test to see if hand discard count is properly updated after remodel is played.
remodel test:  Fail-Expected Value for discard count 1:  Result 2
_________________________________________________________________
Test to see if acquired card is worth more than the trashed card.
remodel test:  Pass-Expected Value for new card >= 4
____________________________________________________________________________________________________________________________________
The next set of tests evaluate what happens when the player attempts to exchange for a card that is less in value(estate for copper).
remodel test:  Fail-Expected Value for hand count 5:  Result 0
_____________________________________________________________________________ 
Test to see if hand discard count is properly updated after remodel is played.
remodel test:  Fail-Expected Value for discard count 1:  Result 0
_________________________________________________________________
Test to see if acquired card is worth more than the trashed card.
remodel test:  Fail-Expected Value for new card <= 4
File 'dominion.c'
Lines executed:31.64% of 610
Branches executed:39.57% of 417
Taken at least once:24.94% of 417
Calls executed:22.34% of 94
Creating 'dominion.c.gcov'


cardtest4
Testing sea hag card:
-------------------------------
________________________________________________________________________________
Test to see if opponents deck count is properly updated after sea_hag is played.
sea_hag test:  Fail-Expected Value 10:  Result 7
______________________________________________________________________________________________________
Test to see if opponents deck contains a curse given the deck initially only had coppers and estates.
sea_hag test:  Fail-opponent does not have a Sea Hag at the top of their deck
File 'dominion.c'
Lines executed:32.95% of 610
Branches executed:40.53% of 417
Taken at least once:26.14% of 417
Calls executed:22.34% of 94
Creating 'dominion.c.gcov'

